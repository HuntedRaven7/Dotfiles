(defwidget bar-widget []
  (box :orientation "h" :class "bar-widget" :halign "center"	
	(top)))
	

(defwidget top []
	(box :orientation "h" :space-evenly false :halign "center" :spacing 30
		(workspaces)))

(defwidget workspaces []
	(box :orientation "h" :class "workspaces" :space-evenly false :spacing 4 :halign "center"
		(for workspace in workspaces
			(eventbox :onscroll "echo {} | sed -e 's/up/-1/g' -e 's/down/+1/g' | xargs hyprctl dispatch workspace" :cursor "pointer"
				(button	:class {workspace.id == current_workspace ? "active" : "inactive"}
						:onclick "hyprctl dispatch workspace ${workspace.id}"
						{workspace.icon})))))


(defvar workspaces '[
  {"id": 1, "icon": ""},
  {"id": 2, "icon": ""},
  {"id": 3, "icon": ""},
  {"id": 4, "icon": ""},
  {"id": 5, "icon": ""}
]')

(defpoll current_workspace :interval "40ms"
  "hyprctl activeworkspace | grep -oP '(?<=workspace ID-ACTIVE )\\d+'")

(defwindow bar
  :monitor 0
  :geometry (geometry :x "0%"
                      :y "3%"
					  :height "3%"
                      :anchor "bottom center")
  :reserve (struts :side "top" :distance "0%")
  (bar-widget))
